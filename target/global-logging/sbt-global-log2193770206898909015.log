[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\wong\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\wong\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.7 (Oracle Corporation Java 24.0.1)
[debug] Load.defaultLoad until apply took 87.7161ms
[debug]           Load.loadUnit: plugins took 80.1202ms
[debug]           Load.loadUnit: defsScala took 0.278ms
[debug] [Loading] Scanning directory C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2\project
[debug]             Load.loadUnit: mkEval took 4.9583ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.2603 ms
[info] loading settings for project prg2104_assignment2-build from idea.sbt...
[debug]               Load.resolveProject(prg2104_assignment2-build) took 42.6404ms
[debug]             Load.loadTransitive: finalizeProject(Project(id prg2104_assignment2-build, base: C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2\project, plugins: List(<none>))) took 69.0348ms
[debug] [Loading] Done in C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2\project, returning: (prg2104_assignment2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2869.3301ms
[debug]           Load.loadUnit: cleanEvalClasses took 62.4388ms
[debug]         Load.loadUnit(file:/C:/Users/wong/IdeaProjects/test/PRG2104_Assignment2/project/, ...) took 3019.386ms
[debug]       Load.apply: load took 3145.9858ms
[debug]       Load.apply: resolveProjects took 7.3217ms
[debug]       Load.apply: finalTransforms took 79.9281ms
[debug]       Load.apply: config.delegates took 8.9427ms
[debug]       Load.apply: Def.make(settings)... took 421.0716ms
[debug]       Load.apply: structureIndex took 130.2933ms
[debug]       Load.apply: mkStreams took 2.2038ms
[info] loading project definition from C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5782.5893ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2
[debug]       Load.loadUnit: mkEval took 0.2924ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.GenerateAllManagedSourcesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.GenerateAllManagedSourcesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.jetbrains.sbt.GenerateAllManagedSourcesPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.124 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 22.1945ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2, plugins: List(<none>))) took 25.276ms
[debug] [Loading] Done in C:\Users\wong\IdeaProjects\test\PRG2104_Assignment2, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1046.1977ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.1253ms
[debug]   Load.loadUnit(file:/C:/Users/wong/IdeaProjects/test/PRG2104_Assignment2/, ...) took 6847.9655ms
[debug] Load.apply: load took 6865.887ms
[debug] Load.apply: resolveProjects took 0.1623ms
[debug] Load.apply: finalTransforms took 21.7487ms
[debug] Load.apply: config.delegates took 0.4352ms
[debug] Load.apply: Def.make(settings)... took 67.232ms
[debug] Load.apply: structureIndex took 22.5779ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to Assignment2 (in build file:/C:/Users/wong/IdeaProjects/test/PRG2104_Assignment2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
